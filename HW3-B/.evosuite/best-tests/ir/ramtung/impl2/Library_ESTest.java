/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 10 09:29:44 GMT 2024
 */

package ir.ramtung.impl2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ir.ramtung.impl2.Library;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Library library0 = new Library();
      library0.timePass(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("mK{vA,Z!h0X", 0);
      List<String> list0 = library0.availableTitles();
      assertFalse(list0.contains("mK{vA,Z!h0X"));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("the magazine has already added", 659);
      library0.addBook("Allg", 659);
      library0.borrow("Allg", "Allg");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("ir.ramtung.sts01.LibraryException", 0);
      try { 
        library0.borrow("ir.ramtung.sts01.LibraryException", "ir.ramtung.sts01.LibraryException");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // this book doesnt exist
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("6 ", 2067);
      library0.addReference("!*", (-2074));
      try { 
        library0.borrow("student name is empty", "!*");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // this book doesnt exist
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("Allg", 83, 1358, (-300));
      library0.addReference("-", (-148));
      library0.borrow("ke:%6#", "ke:%6#");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("hW", 2, 0, 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s number is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("ir.ramtung.impl2.Magazine", (-1197), (-2231), (-1197));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s year is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      // Undeclared exception!
      library0.timePass(7000);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("JF=s+YuV0$zzoQ~u}", "JF=s+YuV0$zzoQ~u}");
      library0.addReference("JF=s+YuV0$zzoQ~u}", 2996);
      library0.borrow("JF=s+YuV0$zzoQ~u}", "r9:m*CEM!K.w");
      try { 
        library0.extend("JF=s+YuV0$zzoQ~u}", (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cant extend
         //
         verifyException("ir.ramtung.impl2.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addStudentMember("\"", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addReference((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addProfMember((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addMagazine((String) null, (-1035), 0, 39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addBook((String) null, 149);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.timePass((-394));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // days cant be negative
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("$", 7000);
      List<String> list0 = library0.availableTitles();
      assertTrue(list0.contains("$"));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("Allg", 83, 1358, (-300));
      List<String> list0 = library0.availableTitles();
      assertFalse(list0.contains("Allg"));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      int int0 = library0.getTotalPenalty("");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("=", "=");
      int int0 = library0.getTotalPenalty("");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      library0.returnDocument("", "");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("=", "=");
      library0.returnDocument("", "");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("days cant be negative", ">");
      library0.extend(">", "the member has already added");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("=", "=");
      library0.extend("the member has already added", "");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      // Undeclared exception!
      try { 
        library0.borrow("", "AA/%S j*\"K<");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("=", "=");
      library0.borrow("", "AA/%S j*\"K<");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("^:R'~2tYXP", 0);
      try { 
        library0.addReference("^:R'~2tYXP", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the reference has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addReference(" ", (-38));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // reference name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("[uNt!V-C$klid921(", 1550, (-361), (-361));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s number is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("the member has already added", (-300));
      try { 
        library0.addMagazine("the member has already added", 0, 497, 4442);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the magazine has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("Allg", 83, 1358, (-300));
      try { 
        library0.addMagazine("the member has already added", 0, 497, 4442);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s year is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine(" ", (-4540), (-4540), (-1821));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("aU/YFx+'\"h", 4035);
      try { 
        library0.addBook("aU/YFx+'\"h", 4035);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the book has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addBook(" ", (-1821));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // book name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      try { 
        library0.addProfMember("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the member has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("=", "=");
      library0.addProfMember("");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addProfMember(" ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // prof name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("JF=s+YuV0$zzoQ~u}", "JF=s+YuV0$zzoQ~u}");
      try { 
        library0.addStudentMember("=DKTh[%;", "JF=s+YuV0$zzoQ~u}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the member has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("=");
      library0.addStudentMember("days cant be negative", ">");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addStudentMember("AA/%S j*\"K<", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // student name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addStudentMember("", "the member cant borrow any more");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // student id is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }
}
